#---
#apiVersion: v1
#kind: ServiceAccount
#metadata:
#  name: opencti-elasticsearch-sa
#  namespace: opencti-elasticsearch
#  annotations:
#    azure.workload.identity/client-id: 88466e0c-cd29-4635-9bf5-877b316c5c9a
#  labels:
#    azure.workload.identity/use: "true"
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: elasticsearch-config-secret
  namespace: opencti-elasticsearch
spec:
  secretStoreRef:
    name: akv-backend
    kind: ClusterSecretStore
  refreshInterval: "10m"
  data:
    - secretKey: bootstrap.password
      remoteRef:
        key: elasticsearch-bootstrap-password
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: elasticsearch-auth-secret
  namespace: opencti-elasticsearch
spec:
  secretStoreRef:
    name: akv-backend
    kind: ClusterSecretStore
  refreshInterval: "10m"
  target:
    template:
      type: kubernetes.io/basic-auth
  data:
    - secretKey: username
      remoteRef:
        key: elasticsearch-user
    - secretKey: password
      remoteRef:
        key: elasticsearch-password
    - secretKey: roles
      remoteRef:
        key: elasticsearch-roles
#---
#apiVersion: secrets-store.csi.x-k8s.io/v1
#kind: SecretProviderClass
#metadata:
#  name: opencti-elasticsearch-secretprovider # needs to be unique per namespace
#  namespace: opencti-elasticsearch
#spec:
#  provider: azure
#  secretObjects:                              # [OPTIONAL] SecretObjects defines the desired state of synced Kubernetes secret objects
#  - data:
#    - key: username                        # data field to populate
#      objectName: elasticsearch-user                       # name of the mounted content to sync; this could be the object name or the object alias
#    - key: password                          # data field to populate
#      objectName: elasticsearch-password                       # name of the mounted content to sync; this could be the object name or the object alias
#    - key: roles
#      objectName: elasticsearch-roles
#    secretName: elasticsearch-auth-secret                    # name of the Kubernetes secret object
#    type: kubernetes.io/basic-auth                              # type of Kubernetes secret object (for example, Opaque, kubernetes.io/tls)  
#  - data:
#    - key: bootstrap.password
#      objectName: elasticsearch-bootstrap-password
#    secretName: elasticsearch-config-secret
#    type: Opaque
#  parameters:
#    usePodIdentity: "false"
#    useVMManagedIdentity: "false"          
#    clientID: "88466e0c-cd29-4635-9bf5-877b316c5c9a"
#    keyvaultName: demo-aks-westeu-898b
#    tenantId: "bb73082a-b74c-4d39-aec0-41c77d6f4850"
#    objects:  |
#      array:
#        - |
#          objectName: elasticsearch-user
#          objectType: secret
#        - |
#          objectName: elasticsearch-password
#          objectType: secret
#        - |
#          objectName: elasticsearch-roles
#          objectType: secret
#        - |
#          objectName: elasticsearch-bootstrap-password
#          objectType: secret
---
apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: elasticsearch
  namespace: opencti-elasticsearch
spec:
  version: 8.9.0
  auth:
    fileRealm:
    - secretName: elasticsearch-auth-secret
  secureSettings:
  - secretName: elasticsearch-config-secret
  nodeSets:
  - name: default
    count: 1
    podTemplate:
      # metadata:
      #   labels:
      #     azure.workload.identity/use: "true"
      spec:
        # serviceAccountName: opencti-elasticsearch-sa
        containers:
          - name: elasticsearch
            resources:
              requests:
                memory: 12Gi
                cpu: 2
              limits:
                memory: 12Gi
                cpu: 2
        #     volumeMounts:
        #     - name: secrets-store01-inline
        #       mountPath: "/mnt/secrets-store"
        #       readOnly: true
        # volumes:
        #   - name: secrets-store01-inline
        #     csi:
        #       driver: secrets-store.csi.k8s.io
        #       readOnly: true
        #       volumeAttributes:
        #         secretProviderClass: "opencti-elasticsearch-secretprovider"
        initContainers:
        - name: sysctl
          securityContext:
            privileged: true
            runAsUser: 0
          command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
    config:
      xpack.ml.enabled: false
      index.store.type: niofs
    volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data # Do not change this name unless you set up a volume mount for the data path.
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 5Gi
        storageClassName: azurefile-csi-opencti